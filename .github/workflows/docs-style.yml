(cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF'
*** Begin Patch
*** Update File: .github/workflows/docs-style.yml
@@
-<<<<<<< codex/fix-vale-installation-step-in-workflow
-name: Docs Style
-
-on:
-  pull_request:
-    branches: [main]
-  push:
-    branches: [main]
-  workflow_dispatch: {}
-
-permissions:
-  contents: read
-  pull-requests: read
-
-jobs:
-  prose:
-    name: Vale prose lint
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/checkout@v4
-      - name: Install Vale
-        run: |
-          set -euo pipefail
-          VALE_VERSION=3.4.1
-          curl -fsSL "https://github.com/errata-ai/vale/releases/download/v${VALE_VERSION}/vale_${VALE_VERSION}_Linux_64-bit.tar.gz" -o vale.tar.gz
-          curl -fsSL "https://github.com/errata-ai/vale/releases/download/v${VALE_VERSION}/vale_${VALE_VERSION}_checksums.txt" -o checksums.txt
-          grep "vale_${VALE_VERSION}_Linux_64-bit.tar.gz" checksums.txt | sha256sum -c -
-          tar -xzf vale.tar.gz
-          sudo install -m 0755 vale /usr/local/bin/vale
-          rm -f vale vale.tar.gz
-          vale --version
-      - name: Run Vale
-        run: |
-          set -euo pipefail
-          config=""
-          if [ -n "${VALE_CONFIG_PATH:-}" ] && [ -f "${VALE_CONFIG_PATH:-}" ]; then
-            config="$VALE_CONFIG_PATH"
-          elif [ -f ".vale.ini" ]; then
-            config=".vale.ini"
-          elif [ -f ".vale/vale.ini" ]; then
-            config=".vale/vale.ini"
-          fi
-
-          if [ -z "$config" ]; then
-            echo "::notice::No Vale configuration found. Skipping prose lint."
-            exit 0
-          fi
-
-          vale --config "$config" .
-=======
-name: docs-style
-on:
-  pull_request:
-    branches: [ main ]
-    paths:
-      - "docs/**"
-      - ".vale/**"
-      - ".vale.ini"
-      - ".github/workflows/docs-style.yml"
-  workflow_dispatch:
-permissions:
-  contents: read
-concurrency:
-  group: docs-style-${{ github.ref }}
-  cancel-in-progress: true
-jobs:
-  vale:
-    runs-on: ubuntu-latest
-    timeout-minutes: 10
-    steps:
-      - uses: actions/checkout@v4
-        with:
-          fetch-depth: 2
-      - name: Install Vale
-        run: |
-          set -euxo pipefail
-          VALE_VERSION="2.29.6"
-          VALE_OS="Linux_64-bit"
-          VALE_TARBALL="vale_${VALE_VERSION}_${VALE_OS}.tar.gz"
-          VALE_URL="https://github.com/errata-ai/vale/releases/download/v${VALE_VERSION}/${VALE_TARBALL}"
-          VALE_SHA256_URL="${VALE_URL}.sha256"
-          mkdir -p bin
-          curl -fsSL -o "$VALE_TARBALL" "$VALE_URL"
-          curl -fsSL -o "${VALE_TARBALL}.sha256" "$VALE_SHA256_URL"
-          sha256sum -c "${VALE_TARBALL}.sha256"
-          tar -xzf "$VALE_TARBALL" -C bin
-          ./bin/vale --version
-      - name: Determine changed docs
-        id: changed
-        run: |
-          base="${{ github.base_ref || 'main' }}"
-          # Ensure base is a remote-tracking branch (origin/branch)
-          if [[ "$base" != origin/* ]]; then
-            base="origin/$base"
-          fi
-          git fetch origin "${base#origin/}" --depth=1 || true
-          files=$(git diff --name-only "$base...HEAD" | grep '^docs/' || true)
-          echo "files<<EOF" >> $GITHUB_OUTPUT
-          echo "$files" >> $GITHUB_OUTPUT
-          echo "EOF" >> $GITHUB_OUTPUT
-      - name: Run Vale (soft; no fail)
-        run: |
-          set -uxo pipefail
-          if [ -n "${{ steps.changed.outputs.files }}" ]; then
-            ./bin/vale --minAlertLevel=suggestion ${{ steps.changed.outputs.files }} || true
-          else
-            echo "No changed docs/* files; skipping."
-          fi
-      - name: Full docs sweep on manual run (optional)
-        if: ${{ github.event_name == 'workflow_dispatch' }}
-        run: |
-          ./bin/vale --minAlertLevel=suggestion docs || true
->>>>>>> main
+name: docs-style
+
+on:
+  pull_request:
+    branches: [ main ]
+    paths:
+      - "docs/**"
+      - ".vale/**"
+      - ".vale.ini"
+      - ".github/workflows/docs-style.yml"
+  workflow_dispatch:
+
+permissions:
+  contents: read
+
+concurrency:
+  group: docs-style-${{ github.ref }}
+  cancel-in-progress: true
+
+jobs:
+  vale:
+    name: Vale prose lint
+    runs-on: ubuntu-latest
+    timeout-minutes: 10
+    steps:
+      - uses: actions/checkout@v4
+        with:
+          fetch-depth: 2
+      - name: Install Vale (v3.4.1, checksum verified)
+        run: |
+          set -euo pipefail
+          VALE_VERSION="3.4.1"
+          VALE_OS="Linux_64-bit"
+          TARBALL="vale_${VALE_VERSION}_${VALE_OS}.tar.gz"
+          BASE_URL="https://github.com/errata-ai/vale/releases/download/v${VALE_VERSION}"
+          curl -fsSL -o "$TARBALL" "${BASE_URL}/${TARBALL}"
+          curl -fsSL -o checksums.txt "${BASE_URL}/vale_${VALE_VERSION}_checksums.txt"
+          grep "$TARBALL" checksums.txt | sha256sum -c -
+          mkdir -p bin
+          tar -xzf "$TARBALL"
+          mv vale bin/vale
+          rm -f "$TARBALL" checksums.txt
+          ./bin/vale --version
+      - name: Determine changed docs
+        id: changed
+        run: |
+          set -euo pipefail
+          base="${{ github.base_ref || 'main' }}"
+          # Ensure base is a remote-tracking branch (origin/branch)
+          if [[ "$base" != origin/* ]]; then
+            base="origin/$base"
+          fi
+          git fetch origin "${base#origin/}" --depth=1 || true
+          files=$(git diff --name-only "$base...HEAD" | grep '^docs/' || true)
+          echo "files<<EOF" >> $GITHUB_OUTPUT
+          echo "$files" >> $GITHUB_OUTPUT
+          echo "EOF" >> $GITHUB_OUTPUT
+      - name: Run Vale (soft; no fail)
+        run: |
+          set -euo pipefail
+          if [ -n "${{ steps.changed.outputs.files }}" ]; then
+            ./bin/vale --minAlertLevel=suggestion ${{ steps.changed.outputs.files }} || true
+          else
+            echo "No changed docs/* files; skipping."
+          fi
+      - name: Full docs sweep on manual run (optional)
+        if: ${{ github.event_name == 'workflow_dispatch' }}
+        run: |
+          ./bin/vale --minAlertLevel=suggestion docs || true
*** End Patch
EOF
)
